package com.nano.todoapp.util;

import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

import com.nano.todoapp.pojo.CustomException;

public class ExceptionUtil {
	
	// making the instance static makes it singleton scoped 
	// but will have to initialize this in the methods if it is null
	// otherwise null pointer will be thrown.
	private static CustomException customException;
	
	public ExceptionUtil() {
		
	}
	
	// TODO: Create singleton instance of the custom exception that will be thrown with different messages.
	public static Object throwExceptionIftrue(boolean condition, String message) throws CustomException {
//		ExceptionUtil util = new ExceptionUtil();
		if(customException == null) {
			synchronized(CustomException.class) {
				if(customException == null) customException = new CustomException();
			}
		}
		if(condition) {
			System.out.println(customException.hashCode());
			customException.setMessage(message);
			throw customException;
		}
		
		return false;
	}

}
